{"version":3,"file":"searchanon.min.js","sources":["../src/searchanon.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Search anon user by code.\n *\n * @module     local_quizanon/searchanon\n * @copyright  2024 Moodle US.\n * @author     Oscar Nadjar <oscar.nadjar@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\n\nexport const init = () => {\n    var searchInput = document.getElementById('id_anonsearch');\n    searchInput.setAttribute('hidden', 'hidden');\n    let searchButton;\n    let inputElement;\n    let usercode;\n    if (searchInput) {\n        Templates.render('local_quizanon/searchbar', {searchInput: searchInput})\n            .then((html) => {\n                let newSearchInput = document.createElement('div');\n                searchInput.parentElement.appendChild(newSearchInput);\n                newSearchInput.innerHTML = html;\n                searchButton = document.getElementById('searchbutton-anon');\n                inputElement = document.getElementById('searchinput-anon');\n                inputElement.addEventListener('keypress', (event) => {\n                    if (event.key === 'Enter') {\n                        event.preventDefault();\n                        document.getElementById('searchbutton-anon').click();\n                    }\n                });\n                searchButton.addEventListener('click', async function() {\n                    usercode = inputElement.value;\n                    let errorcontainer = document.getElementById('error-search-anon');\n                    if (!usercode) {\n                        errorcontainer.innerHTML = await getString('searchinputempty', 'local_quizanon');\n                        if (errorcontainer.attributes.getNamedItem('hidden')) {\n                            errorcontainer.attributes.removeNamedItem('hidden');\n                        }\n                        return;\n                    }\n                    if (!/^[a-z0-9]{6}$/i.test(usercode)) {\n                        errorcontainer.innerHTML = await getString('searchinputinvalid', 'local_quizanon');\n                        if (errorcontainer.attributes.getNamedItem('hidden')) {\n                            errorcontainer.attributes.removeNamedItem('hidden');\n                        }\n                        return;\n                    }\n                    let userElement = Array.from(document.querySelectorAll('h4')).find(el => el.textContent.includes(usercode));\n                    if (userElement) {\n                        errorcontainer.attributes.setNamedItem(document.createAttribute('hidden'));\n                        userElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n                        userElement.style.backgroundColor = 'yellow';\n                        setTimeout(() => {\n                            userElement.style.backgroundColor = '';\n                        }, 2000);\n                    } else {\n                        errorcontainer.innerHTML =  await getString('searchinputnotfound', 'local_quizanon');\n                        if (errorcontainer.attributes.getNamedItem('hidden')) {\n                            errorcontainer.attributes.removeNamedItem('hidden');\n                        }\n                    }\n                });\n        });\n    }\n};"],"names":["searchInput","document","getElementById","searchButton","inputElement","usercode","setAttribute","render","then","html","newSearchInput","createElement","parentElement","appendChild","innerHTML","addEventListener","event","key","preventDefault","click","async","value","errorcontainer","attributes","getNamedItem","removeNamedItem","test","userElement","Array","from","querySelectorAll","find","el","textContent","includes","setNamedItem","createAttribute","scrollIntoView","behavior","block","style","backgroundColor","setTimeout"],"mappings":";;;;;;;;8JA0BoB,SACZA,YAAcC,SAASC,eAAe,qBAEtCC,aACAC,aACAC,SAHJL,YAAYM,aAAa,SAAU,UAI/BN,gCACUO,OAAO,2BAA4B,CAACP,YAAaA,cACtDQ,MAAMC,WACCC,eAAiBT,SAASU,cAAc,OAC5CX,YAAYY,cAAcC,YAAYH,gBACtCA,eAAeI,UAAYL,KAC3BN,aAAeF,SAASC,eAAe,qBACvCE,aAAeH,SAASC,eAAe,oBACvCE,aAAaW,iBAAiB,YAAaC,QACrB,UAAdA,MAAMC,MACND,MAAME,iBACNjB,SAASC,eAAe,qBAAqBiB,YAGrDhB,aAAaY,iBAAiB,SAASK,iBACnCf,SAAWD,aAAaiB,UACpBC,eAAiBrB,SAASC,eAAe,yBACxCG,gBACDiB,eAAeR,gBAAkB,mBAAU,mBAAoB,uBAC3DQ,eAAeC,WAAWC,aAAa,WACvCF,eAAeC,WAAWE,gBAAgB,eAI7C,iBAAiBC,KAAKrB,iBACvBiB,eAAeR,gBAAkB,mBAAU,qBAAsB,uBAC7DQ,eAAeC,WAAWC,aAAa,WACvCF,eAAeC,WAAWE,gBAAgB,eAI9CE,YAAcC,MAAMC,KAAK5B,SAAS6B,iBAAiB,OAAOC,MAAKC,IAAMA,GAAGC,YAAYC,SAAS7B,YAC7FsB,aACAL,eAAeC,WAAWY,aAAalC,SAASmC,gBAAgB,WAChET,YAAYU,eAAe,CAAEC,SAAU,SAAUC,MAAO,WACxDZ,YAAYa,MAAMC,gBAAkB,SACpCC,YAAW,KACPf,YAAYa,MAAMC,gBAAkB,KACrC,OAEHnB,eAAeR,gBAAmB,mBAAU,sBAAuB,kBAC/DQ,eAAeC,WAAWC,aAAa,WACvCF,eAAeC,WAAWE,gBAAgB"}